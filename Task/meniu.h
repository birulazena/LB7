#pragma once
#include <iostream>
#define ASCII_COLOR_YELLOW "\e[0;33m"
#define ASCII_RESET "\e[0m"

void meniu() {
  for (;;) {
    std::cout << "Введите 1 - кто выполнил задание\n";  // O(1)
    std::cout << "Введите 2 - суть задания\n";          // O(1)
    std::cout << "Введите 3 - запустить программу\n";   // O(1)
    std::cout << "Введите 4 - завершить программу\n";   // O(1)
    double number_for_menu;

    for (;;) {
      std::string string_for_menu;              // O(1)
      std::cin >> string_for_menu;              // O(1)
      bool check_string = true;                 // O(1)
      for (auto check_str : string_for_menu) {  // O(m) m - длина строки
        if (!isdigit(check_str)) {
          check_string = false;  // O(1)
          break;                 // O(1)
        }
      }
      if (check_string) {
        number_for_menu = std::stod(string_for_menu);  // O(1)
        if (number_for_menu <= 4) {
          break;  // O(1)
        } else {
          std::cout << "Неверный ввод, повторите попытку ";  // O(1)
        }
      } else {
        std::cout << "Неверный ввод. повторите попытку\n";  // O(1)
      }
    }

    if (number_for_menu == 1) {
      std::cout << ASCII_COLOR_YELLOW
          "\nЗадание выполнил Бируля Евгений.\nВариант 4\n\n"
                << ASCII_RESET;  // O(1)
      continue;                  // O(1)
    } else if (number_for_menu == 2) {
      std::cout << "\nВведите 1 - Task_1\n";  // O(1)
      std::cout << "Введите 2 - Task_2\n";    // O(1)
      std::cout << "Введите 3 - Task_3\n";    // O(1)
      std::cout << "Введите 4 - Task_4\n";    // O(1)
      std::cout << "Введите 5 - Task_5\n";    // O(1)
      int number_for_task;                    // O(1)
      for (;;) {
        std::string check;      // O(1)
        std::cin >> check;      // O(1)
        bool T_or_F = true;     // O(1)
        for (auto l : check) {  // O(l) - l - длина строки
          if (!isdigit(l)) {
            T_or_F = false;  // O(1)
            break;           // O(1)
          }
        }
        if (T_or_F) {
          number_for_task = std::stoi(check);  // O(1)
          if (number_for_task > 0 && number_for_task <= 5) {
            break;  // O(1)
          } else {
            std::cout << "Неверный ввод\n";  // O(1)
          }
        } else {
          std::cout << "Неверный ввод\n";  // O(1)
        }
      }

      if (number_for_task == 1) {
        std::cout << ASCII_COLOR_YELLOW
            "\nПеревести числа согласно своему варианту. Предусмотреть "
            "ввод\nположительных и отрицательных чисел. Длинна числа не "
            "ограничена.\n4. Из естественной формы в прямой код\n\n"
                  << ASCII_RESET;  // O(1)
      }
      if (number_for_task == 2) {
        std::cout << ASCII_COLOR_YELLOW
            "\nОсуществить сложение чисел согласно своему варианту. "
            "Разработать\nфункции для выполнения операции сложения. "
            "Предусмотреть ввод\nположительных и отрицательных чисел. "
            "Длинна вводимых чисел не\nограничена.\n4. Найдите сумму "
            "двоичных чисел, заданных в естественной форме.\nСложение "
            "выполните в обратном коде. Ответ выразите в прямом коде.\n\n"
                  << ASCII_RESET;  // O(1)
      }
      if (number_for_task == 3) {
        std::cout << ASCII_COLOR_YELLOW
            "\nПользователь вводит основание системы счисления. "
            "Осуществить\nсложение и вычитание чисел в заданной системе "
            "счисления. В другую\nсистему счисления не переводить. В "
            "системах счисления больших\nдесятичной использовать буквы по "
            "аналогии с шестнадцатеричной системой.\nРазработать функции "
            "для выполнения операции сложения и функции для\nвыполнения "
            "операции вычитания. Предусмотреть ввод положительных "
            "и\nотрицательных чисел.\n\n"
                  << ASCII_RESET;  // O(1)
      }
      if (number_for_task == 4) {
        std::cout << ASCII_COLOR_YELLOW
            "Необходимо разработать программу, которая проверяет, делится\nли "
            "введенное пользователем число на заданное простое. Программа не "
            "должна\nсодержать операций умножения, деления, вычитания (в том "
            "числе взятия\nостатка от деления). Рекомендуется использовать "
            "побитовые операции. Для\nкаждого варианта нужно проверить "
            "делимость на 3 простых числа. Проверять\nможно по отдельности "
            "(сначала получить ответ для первого, затем для\nвторого, затем "
            "для третьего). Предлагаемые тестовые группы:\n4) 3, 61, 131\n\n"
                  << ASCII_RESET;  // O(1)
      }
      if (number_for_task == 5) {
        std::cout << ASCII_COLOR_YELLOW
            "Патриций решил устроить праздник и для этого приготовил 240 "
            "бочек\nвина. Однако к нему пробрался недоброжелатель по имени "
            "Пользователь,\nкоторый подсыпал яд в одну из бочек. "
            "Недоброжелателя тут же поймали,\nдальнейшая его судьба "
            "неизвестна, но ходят слухи, что он проверяет\nконсольный ввод в "
            "аду в качестве наказания, однако сейчас не об этом. Про "
            "яд\nизвестно, что человек, который его выпил, умирает в течение "
            "24 часов. До\nпраздника осталось два дня, то есть 48 часов. У "
            "патриция есть пять рабов,\nкоторыми он готов пожертвовать, чтобы "
            "узнать, в какой именно бочке яд. Вы\nблизкий друг Патриция и "
            "совершенно не хотите стать одним из тех рабов, что\nбудут "
            "проверять вино на наличие яда. Подойдите к заданию творчески "
            "и\nнайдите способ определения отравленной бочки с ядом.\n\n"
                  << ASCII_RESET;  // O(1)
      }
      continue;  // O(1)
    } else if (number_for_menu == 3) {
      break;  // O(1)
    } else if (number_for_menu == 4) {
      exit(0);  // O(1)
    }
  }
}